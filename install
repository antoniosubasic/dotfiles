#!/bin/sh

set -e

if [ "$(id -u)" -eq 0 ]; then
    printf "must not be run as root\n" >&2
    exit 1
fi

if ! sudo -v; then
    printf "sudo is required\n" >&2
    exit 1
fi

if [ ! -d "$HOME/.config" ]; then
    mkdir -p "$HOME/.config"
fi

CWD="$(dirname "$(realpath "$0")")"
BASE="$CWD"/scripts/base

. "$BASE"

case "$OS" in
    ubuntu|linuxmint|arch|endeavouros) ;;
    *)
        printf "unsupported OS: %s\n" "$OS" >&2
        exit 1
        ;;
esac

scripts_pattern="^$(printf "%s" "$CWD" | sed "s|/|\\\/|g" | sed "s|\.|\\\.|g")\/scripts\/[0-9][0-9]"
if [ "$IS_WSL" -ne 0 ]; then scripts_pattern="${scripts_pattern}!?"; fi
scripts_pattern="${scripts_pattern}_"
num_of_args="$#"
if [ "$num_of_args" -eq 0 ]; then
    scripts_pattern="${scripts_pattern}.*\.sh$"
else
    args=0

    for arg in "$@"; do
        [ "$arg" = "--" ] && continue

        if [ "$args" -eq 0 ]; then
            scripts_pattern="${scripts_pattern}("
        else
            scripts_pattern="${scripts_pattern}|"
        fi

        scripts_pattern="${scripts_pattern}$(printf "%s" "$arg" | sed "s|-|_|g")"
        args=$((args + 1))
    done

    scripts_pattern="${scripts_pattern})\.sh$"
fi

scripts="$(find "$CWD/scripts" -regextype posix-extended -type f -regex "$scripts_pattern" | sort)"
if [ -z "$scripts" ]; then
    printf "no such section found\n" >&2
    exit 1
fi
total="$(echo "$scripts" | wc -l)"

count=0
for script in $scripts; do
    printf "=== %s ===\n" "$(printf "$script" | sed -E "s|$CWD/scripts/[0-9]{2}!?_||; s|\.sh$||; s|_| |")"

    sh "$script" "$BASE"
    [ $? -ne 0 ] && exit $?

    count=$((count + 1))
    if [ "$count" -lt "$total" ]; then
        printf "\n"
    fi
done